@page "/Account/Register"
@inherits Base;

@using DataMarkup.Entities.Parameters.Account
@using DataMarkup.Frontend.Models
@using Microsoft.AspNetCore.Components
@inject ApiHttpClient ApiHttpClient
@inject NavigationManager NavigationManager

@if (Alert.Show)
{
    <AlertMessage AlertType="@Alert.TypeString"
                  Title="@Alert.Title"
                  Message="@Alert.Message"></AlertMessage>
}

<EditForm Model="@_registerParameters" OnValidSubmit="@RegisterAsync">
    <DataAnnotationsValidator />
    <ValidationSummary />
    
    <div class="row">
        <div class="col-lg-4 offset-lg-4 pt-4 pb-4 border">
            <div class="mb-3 text-center">
                <h3>Registration</h3>
            </div>
            <div class="mb-3">
                <label class="fw-bold">Username</label>
                <InputText @bind-Value="_registerParameters.Username" class="form-control"
                           placeholder="Username" />
                <ValidationMessage For="() => _registerParameters.Username" />
            </div>
            <div class="mb-3">
                <label class="fw-bold">Email</label>
                <InputText @bind-Value="_registerParameters.Email" class="form-control"
                           placeholder="Email" />
                <ValidationMessage For="() => _registerParameters.Email" />
            </div>
            <div class="mb-3">
                <label class="fw-bold">Password</label>
                <InputText @bind-Value="_registerParameters.Password" type="password" class="form-control"
                           placeholder="Password" />
                <ValidationMessage For="() => _registerParameters.Password" />
            </div>
            <div class="mb-3 d-grid gap-2">
                <button type="submit" class="btn btn-dark">Register</button>
            </div>
        </div>
    </div>
</EditForm>

@code
{
    private readonly RegisterParameters _registerParameters = new();

    private async Task RegisterAsync()
    {
        var registerResult = await ApiHttpClient.RegisterAsync(_registerParameters);

        if (registerResult?.Successful is true)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            await ShowAlertAsync(AlertType.Danger, registerResult?.Message ?? DefaultErrorMessage);
        }
    }
}