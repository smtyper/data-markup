@page "/Account/Register"
@using Microsoft.Extensions.Logging
@using Microsoft.AspNetCore.Components
@using DataMarkup.Frontend.Models.Api.Account

@inject NavigationManager NavigationManager
@inject DataMarkupClient DataMarkupClient;
@inject ILogger<RegisterModel> Logger


<div class="container-fluid float-left">
    <div class="row">
        <div class="col-md-6">
            <EditForm Model="@_registerModel" OnValidSubmit="@HandleValidSubmit" On>
                <DataAnnotationsValidator/>
                <ValidationSummary/>
                <h2>User registration</h2>
                <div class="form-group">
                    <label>Username:</label>
                    <InputText id="username" class="form-control w-50 mb-3" @bind-Value="_registerModel.Username"/>
                    <ValidationMessage For="() => _registerModel.Username"/>
                </div>
                <div class="form-group">
                    <label>Email:</label>
                    <InputText id="email" class="form-control w-50 mb-3" @bind-Value="_registerModel.Email"/>
                    <ValidationMessage For="() => _registerModel.Email"/>
                </div>
                <div class="form-group">
                    <label>Password:</label>
                    <InputText id="password" class="form-control w-50 mb-3" @bind-Value="_registerModel.Password"/>
                    <ValidationMessage For="() => _registerModel.Password"/>
                </div>
                <div>
                    <input class="btn btn-outline-primary" type="submit" @onclick="SubmitClickAsync"/>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code
{
    private readonly RegisterModel _registerModel = new();

    private async void SubmitClickAsync()
    {
        var statusCode = await DataMarkupClient.RegisterAsync(_registerModel);
        
        Console.WriteLine(statusCode.ToString());
        // if (statusCode.IsSuccesStatusCode())
        //     NavigationManager.NavigateTo("");
    }

    private void HandleValidSubmit()
    {
        Logger.LogInformation("HandleValidSubmit called");

        // Process the valid form
    }
}